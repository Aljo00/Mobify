<%- include('../../views/layout/header.ejs') %>

<!-- Bootstrap CSS -->
<link
  href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
  rel="stylesheet"
/>
<!-- Font Awesome -->
<link
  rel="stylesheet"
  href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
/>
<!-- SweetAlert2 CSS -->
<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css"
/>
<!-- Custom CSS -->
<link rel="stylesheet" href="/styles/user/cart.css" />

<style>
  .checkout-button:disabled {
    background-color: #f17171;
    cursor: not-allowed;
  }
</style>

<div class="cart-container">
  <!-- Breadcrumbs -->
  <nav aria-label="breadcrumb">
    <ol class="breadcrumb">
      <li class="breadcrumb-item"><a href="/">Home</a></li>
      <li class="breadcrumb-item active" aria-current="page">Cart</li>
    </ol>
  </nav>
  <h1>Shopping Cart</h1>
  <div class="cart-content">
    <div class="cart-items">
      <% if (cart && cart.items.length > 0) { %> <% cart.items.forEach(item => {
      %>
      <div class="cart-item">
        <div class="item-actions">
          <form
            action="/cart/delete/<%= item.ProductId._id.toString() %>"
            method="POST"
          >
            <button type="submit" class="btn btn-danger btn-icon">
              <i class="fas fa-trash-alt"></i>
            </button>
          </form>
        </div>
        <div class="item-image">
          <% if (item.ProductId && item.ProductId.productImage.length > 0) { %>
          <img
            src="<%= item.ProductId.productImage[0] %>"
            alt="<%= item.ProductId.productName %>"
          />
          <% } else { %>
          <img src="/path-to-placeholder-image.jpg" alt="No Image Available" />
          <% } %>
        </div>
        <div class="item-details">
  <h2>
    <a href="/product/<%= item.ProductId._id.toString() %>">
      <%= item.ProductId.productName %>
    </a>
  </h2>
  <p>RAM: <%= item.RAM %></p>
  <p>Storage: <%= item.Storage %></p>
  <p>Color: <%= item.color %></p>
  <% if (item.outOfStock) { %>
  <p class="text-danger">Out of stock</p>
  <% } else if (insufficientQuantityItems && insufficientQuantityItems.some(i => i.productName === item.ProductId.productName)) { %>
<p class="text-danger">Insufficient quantity available</p>
<p>Quantity: 
    <select name="quantity" class="form-select d-inline w-auto ms-2" onchange="updateCartItem(this, '<%= item.ProductId._id.toString() %>')">
      <% for (let i = 1; i <= 5; i++) { %>
        <option value="<%= i %>" <%= item.quantity === i ? 'selected' : '' %>><%= i %></option>
      <% } %>
    </select>
  </p>
<% } else { %>
  <p>Quantity: 
    <select name="quantity" class="form-select d-inline w-auto ms-2" onchange="updateCartItem(this, '<%= item.ProductId._id.toString() %>')">
      <% for (let i = 1; i <= 5; i++) { %>
        <option value="<%= i %>" <%= item.quantity === i ? 'selected' : '' %>><%= i %></option>
      <% } %>
    </select>
  </p>
<% } %>
</div>
<div class="item-price">
  <p>Price: ₹<%= item.price %></p>
  <p>Total: ₹<%= item.totalPrice %></p>
</div>
      </div>
      <% }); %> <% } else { %>
      <p>Your cart is empty.</p>
      <% } %>
    </div>
    <div class="cart-summary">
      <h2>Cart Summary</h2>
      <p>
        Total Items: <%=  cart.items.filter(item => !item.outOfStock).length;%>
      </p>
      <p>
        Total Price: ₹<%= cart.items.reduce((acc, item) => acc +
        item.totalPrice, 0) %>
      </p>
      <a href="/checkout">
        <button class="checkout-button" <%= cart.items.filter(item => !item.outOfStock).length === 0 ? 'disabled' : '' %>>Proceed to Checkout</button>
      </a>  
    </div>
  </div>
</div>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<!-- SweetAlert2 JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
 function updateCartItem(selectElement, productId) {
  const quantity = selectElement.value;
  const itemElement = selectElement.closest('.cart-item');

  // Extract additional details
  const RAM = itemElement.querySelector('.item-details p:nth-child(2)').innerText.split(": ")[1];
  const Storage = itemElement.querySelector('.item-details p:nth-child(3)').innerText.split(": ")[1];
  const color = itemElement.querySelector('.item-details p:nth-child(4)').innerText.split(": ")[1];
  const price = itemElement.querySelector('.item-price p:nth-child(1)').innerText.split(": ")[1];

  // Make fetch request to update cart
  fetch(`/cart/update`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ id: productId, quantity, ram: RAM, storage: Storage, color, price }),
  })
    .then((response) => response.json())
    .then((data) => {
      if (data.success) {
        // Refresh the page on success
        window.location.reload();
      } else {
        // Show error message if update fails
        Swal.fire({
          icon: 'error',
          title: 'Oops...',
          text: data.message || 'Failed to update cart',
        }).then(() => {
          // Update cart summary
          document.querySelector('.cart-summary p:nth-child(2)').innerText = `Total Items: ${data.totalItems}`;
          document.querySelector('.cart-summary p:nth-child(3)').innerText = `Total Price: ₹${data.totalPrice}`;
          // Show insufficient quantity message
          itemElement.querySelector('.item-details').insertAdjacentHTML('beforeend', '<p class="text-danger">Insufficient quantity</p>');
        });
      }
    })
    .catch((error) => {
      console.error('Error updating cart:', error);
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: 'An error occurred. Please try again.',
      }).then(() => {
        window.location.reload();
      });
    });
}
</script>

<%- include('../../views/layout/footer.ejs') %>
